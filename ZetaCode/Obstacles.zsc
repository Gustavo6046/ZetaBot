class ObstacleCheckWaiter : Thinker
{
    enum WaitState
    {
        CS_NOTHING,
        CS_PENDING,
        CS_WALL,
        CS_ACTOR
    };
    
    WaitState st;
}

class ObstacleChecker : Actor
{
    Default
    {
        Speed 1;
        Projectile;
    }
    
    ObstacleCheckWaiter waiter;
    
    void SetState(uint st)
    {
        if ( waiter != null )
            waiter.st = st;
    }
    
    static ObstacleCheckWaiter MakeFor(Actor other, double ang, double maxDist)
    {
        ObstacleCheckWaiter waiter = new("ObstacleCheckWaiter");
        waiter.st = ObstacleCheckWaiter.CS_PENDING;
        
        ObstacleChecker ck = ObstacleChecker(other.SpawnMissileAngleZ(24, "ObstacleChecker", ang, 0));
        
        if ( ck == null )
            return null;
        
        ck.speed = maxDist;
        ck.waiter = waiter;
        
        return waiter;
    }
    
    States
    {
        Spawn:
            TNT1 A 1;
            TNT1 A 0
            {
                SetState(ObstacleCheckWaiter.CS_NOTHING);
            }
            Stop;
            
        Crash:
        XDeath:
            TNT1 A 0
            {
                SetState(ObstacleCheckWaiter.CS_ACTOR);
            }
            Stop;
            
        Death:
            TNT1 A 0
            {
                SetState(ObstacleCheckWaiter.CS_WALL);
            }
            Stop;
    }
}
